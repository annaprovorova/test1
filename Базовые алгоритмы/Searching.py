#Алгоритмы поиска в массиве (на самом деле в строке)

#Нахождение максимального элемента последовательности чисел
#барьерный элемент "0"
from random import * #импортирование всех элементов библиотеки random

def find_max():
    x = int(input('Введите последовательность чисел \n')) #ввод первого элемента последовательности
    max = -1000000 #входное барьерное значение
    max_n = 0
    while x!=0:
        if x > max:
            max, max_n = x, 1
        elif x == max:
            max_n += 1
        x = int(input()) #ввод следующего элемента
    print(max, max_n)

#Поиск первых 3 максимумов
#задача для 7 класса, так что без списков
def max_of_3():
    x = int(input())
    m1 = m2 = m3 = -100000
    m1_n = m2_n = m3_n = 0
    while x != 0:            #барьерный элемент "0"
        # обработка x:
        if x > m1:
            m1, m2, m3 = x, m1, m2
            m1_n, m2_n, m3_n = 1, m1_n, m2_n #подсчёт количества таких максимумов
        elif x == m1:
            m1_n += 1
        elif x > m2:
            m2, m3 = x, m2
            m2_n, m3_n = 1, m2_n
        elif x == m2:
            m2_n += 1
        elif x > m3:
            m3 = x
            m3_n = 1
        elif x == m3:
            m3_n += 1
        # считывание x для следующей итерации:
        x = int(input())
    print (m1, m2, m3,'\n', m1_n, m2_n, m3_n)

#поиск элемента в массиве
def find_x():
    x = int(input())
    A = [randint(0, 10) for i in range(10)] #создание списка, заполненного случайными числами
    pos_x = -1000 #позиция x в списке
    pos = [] #список позиций найденного x
    for i in range(len(A)):
        if x == A[i]:
            pos.append(i) #не забывать, что элементы нумеруются с 0
    if pos == []:
        print('Такого элемента в списке нет!')
    else:
        print('Элемент найден на позиции(ях)', *pos)

   # print(*A)

def test():
    #find_max()
    #max_of_3()
    find_x()

if __name__ == '__main__':
    test()
